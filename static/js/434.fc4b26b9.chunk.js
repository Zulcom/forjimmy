"use strict";(globalThis.webpackChunkforjimmy=globalThis.webpackChunkforjimmy||[]).push([[434,819],{819:(r,e,t)=>{t.r(e),t.d(e,{DEFAULT_PARAMS:()=>a});const a="?format=json"},434:(r,e,t)=>{t.r(e),t.d(e,{default:()=>s});var a=t(819);class s{constructor(){this.name="NHTSAVehicleAPI",this._config={base:"",retries:5,retryDelay:1e3},this.paramsFactory=()=>new URLSearchParams(a.DEFAULT_PARAMS)}set config(r){this._config=r}fetchRetry(r){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return window.fetch(r).catch((t=>{if(e>=this._config.retries)throw t;return console.debug(`[API] Response error for url ${r} handled, scheduled new attempt #${e+1}`),new Promise((t=>setTimeout((()=>t(this.fetchRetry(r,++e))),this._config.retryDelay)))}))}fetch(r){return console.debug("[API] Started API call for url",r),this.fetchRetry(this._config.base+r).then((e=>{if(console.debug(`[API] Finished API call for ${r} with response`,e),!e.ok)throw new Error(e.statusText);return e.json()})).catch((r=>{throw console.error("[API] Fetch error",r),r}))}urlParams(r){if(r){const e=this.paramsFactory();for(let t of Object.entries(r))e.append(...t);return"?"+e.toString()}return a.DEFAULT_PARAMS}loadManufacturers(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return this.fetch("getallmanufacturers"+this.urlParams({page:String(r)}))}loadMakeForManufacturer(r){return this.fetch(`GetMakeForManufacturer/${r}`+this.urlParams())}loadManufacturerById(r){return this.fetch(`GetWMIsForManufacturer/${r}`+this.urlParams())}loadModelsForMakeId(r){return this.fetch(`GetModelsForMakeId/${r}`+this.urlParams())}}}}]);
//# sourceMappingURL=434.fc4b26b9.chunk.js.map